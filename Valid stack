#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#define MAX 100 
struct Stack {
    int top;
    int arr[MAX];
};
void initialize(struct Stack* stack) {
    stack->top = -1;
}
bool isEmpty(struct Stack* stack) {
    return stack->top == -1;
}
bool isFull(struct Stack* stack) {
    return stack->top == MAX - 1;
}
void push(struct Stack* stack, int value) {
    if (isFull(stack)) {
        printf("Stack overflow\n");
        return;
    }
    stack->arr[++stack->top] = value;
    printf("%d pushed onto stack\n", value);
}
int pop(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack underflow\n");
        return -1; 
    }
    return stack->arr[stack->top--];
}
int peek(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty\n");
        return -1; 
    }
    return stack->arr[stack->top];
}
void printStack(struct Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty\n");
        return;
    }
    printf("Stack elements are:\n");
    for (int i = 0; i <= stack->top; i++) {
        printf("%d ", stack->arr[i]);
    }
    printf("\n");
}
int main() {
    struct Stack stack;
    initialize(&stack);
    push(&stack, 10);
    push(&stack, 20);
    push(&stack, 30);
    printStack(&stack);
    printf("Top element is %d\n", peek(&stack));
    printf("%d popped from stack\n", pop(&stack));
    printf("%d popped from stack\n", pop(&stack));
    printStack(&stack);
    return 0;
}

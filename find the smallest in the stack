#include <stdio.h>
#include <stdlib.h>
#define MAX_SIZE 100
typedef struct {
    int data[MAX_SIZE];
    int top;
} Stack;
void initialize(Stack *stack) {
    stack->top = -1;
}
int isEmpty(Stack *stack) {
    return (stack->top == -1);
}
int isFull(Stack *stack) {
    return (stack->top == MAX_SIZE - 1);
}
void push(Stack *stack, int element) {
    if (isFull(stack)) {
        printf("Stack Overflow\n");
        return;
    }
stack->data[++stack->top] = element;
}
int pop(Stack *stack) {
    if (isEmpty(stack)) {
        printf("Stack Underflow\n");
        return -1;
    }
    return stack->data[stack->top--];
}
int getMin(Stack *stack) {
    int min = stack->data[0];
    for (int i = 1; i <= stack->top; i++) {
        if (stack->data[i] < min) {
            min = stack->data[i];
        }
    }
    return min;
}
int main() {
    Stack stack;
    initialize(&stack);

    push(&stack, 5);
    push(&stack, 3);
    push(&stack, 8);
    push(&stack, 1);
printf("Smallest element in the stack: %d\n", getMin(&stack));
    return 0;
}
